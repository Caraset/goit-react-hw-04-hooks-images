{"version":3,"sources":["components/Loader/Loader.js","services/images-api.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["MarkUpLoader","className","type","color","height","width","KEY","BASE_URL","query","page","a","fetch","respons","json","parsedRespons","fetchImages","Searchbar","onSubmit","useState","setQuery","e","preventDefault","trimedQuery","trim","alert","onChange","currentTarget","value","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","alt","onModalClick","onClick","src","ImageGallery","images","openModal","map","tags","webformatURL","id","largeImageURL","Button","onMoreClick","modalRoot","document","querySelector","Modal","modalImg","closeModal","useEffect","onEscPressHandle","code","window","addEventListener","removeEventListener","createPortal","target","App","setImages","setPage","setModalImg","isLoading","setIsLoading","showModal","setShowModal","then","res","prev","hits","scrollTo","top","documentElement","scrollHeight","behavior","catch","console","log","finally","Loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.09f64f04.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\n\nfunction MarkUpLoader() {\n  return (\n    <div className=\"loader\">\n      <Loader type=\"Grid\" color=\"#3f51b5\" height={80} width={80} />\n    </div>\n  );\n}\n\nexport default MarkUpLoader;\n","const KEY = '23292870-e9e1fc8f4fc8bd7151266ea82';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nasync function fetchImages(query, page) {\n  const respons = await fetch(\n    `${BASE_URL}?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  const parsedRespons = await respons.json();\n  return parsedRespons;\n}\n\nexport default fetchImages;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  function onSubmitHandler(e) {\n    e.preventDefault();\n\n    const trimedQuery = query.trim();\n\n    if (!trimedQuery) {\n      alert('Please enter a search term to begin your search.');\n      return;\n    }\n\n    onSubmit(trimedQuery);\n    setQuery('');\n  }\n\n  function onInput(e) {\n    setQuery(e.currentTarget.value);\n  }\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={onSubmitHandler}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          onChange={onInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({ image, alt, onModalClick }) {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={onModalClick}>\n      <img src={image} alt={alt} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.string,\n  alt: PropTypes.string,\n  onModalClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({ images, openModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ tags, webformatURL, id, largeImageURL }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            image={webformatURL}\n            alt={tags}\n            onModalClick={() => openModal(largeImageURL)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  openModal: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nfunction Button({ onMoreClick }) {\n  return (\n    <button className=\"Button\" onClick={onMoreClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onMoreClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ tags, modalImg, closeModal }) {\n  useEffect(() => {\n    function onEscPressHandle(e) {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    }\n\n    window.addEventListener('keydown', onEscPressHandle);\n\n    return function cleanup() {\n      window.removeEventListener('keydown', onEscPressHandle);\n    };\n  }, [closeModal]);\n\n  function onBackdropClickHandle(e) {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  }\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={onBackdropClickHandle}>\n      <div className=\"Modal\">\n        <img src={modalImg} alt={tags} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  tags: PropTypes.string,\n  modalImg: PropTypes.string,\n  closeModal: PropTypes.func,\n};\n\nexport default Modal;\n","import Loader from './components/Loader';\nimport { useState, useEffect } from 'react';\n\nimport './App.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport fetchImages from './services/images-api';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(0);\n  const [modalImg, setModalImg] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    fetchImages(query, page)\n      .then(res => {\n        setImages(prev => [...prev, ...res.hits]);\n        if (page !== 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .catch(res => {\n        console.log(res);\n      })\n      .finally(() => setIsLoading(false));\n  }, [page, query]);\n\n  function openModal(modalImg) {\n    setShowModal(true);\n    setModalImg(modalImg);\n  }\n\n  function onSearchSubmit(value) {\n    if (value === query) {\n      alert('already loaded');\n      return;\n    }\n    setQuery(value);\n    setPage(1);\n    setImages([]);\n  }\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onSearchSubmit}></Searchbar>\n      <ImageGallery images={images} openModal={openModal} />\n      {isLoading && <Loader />}\n      {images.length !== 0 && isLoading !== true && (\n        <Button\n          onMoreClick={() => {\n            setPage(prev => prev + 1);\n          }}\n        />\n      )}\n      {showModal && (\n        <Modal\n          closeModal={() => {\n            setShowModal(false);\n          }}\n          modalImg={modalImg}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}